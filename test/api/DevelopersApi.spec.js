/**
 * oxd-server
 * oxd-server
 *
 * OpenAPI spec version: 4.0
 * Contact: yuriyz@gluu.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OxdServer);
  }
}(this, function(expect, OxdServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OxdServer.DevelopersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DevelopersApi', function() {
    describe('getAccessTokenByRefreshToken', function() {
      it('should call getAccessTokenByRefreshToken successfully', function(done) {
        //uncomment below and update the code to test getAccessTokenByRefreshToken
        //instance.getAccessTokenByRefreshToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAuthorizationUrl', function() {
      it('should call getAuthorizationUrl successfully', function(done) {
        //uncomment below and update the code to test getAuthorizationUrl
        //instance.getAuthorizationUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClientToken', function() {
      it('should call getClientToken successfully', function(done) {
        //uncomment below and update the code to test getClientToken
        //instance.getClientToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDiscovery', function() {
      it('should call getDiscovery successfully', function(done) {
        //uncomment below and update the code to test getDiscovery
        //instance.getDiscovery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJsonWebKeySet', function() {
      it('should call getJsonWebKeySet successfully', function(done) {
        //uncomment below and update the code to test getJsonWebKeySet
        //instance.getJsonWebKeySet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLogoutUri', function() {
      it('should call getLogoutUri successfully', function(done) {
        //uncomment below and update the code to test getLogoutUri
        //instance.getLogoutUri(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensByCode', function() {
      it('should call getTokensByCode successfully', function(done) {
        //uncomment below and update the code to test getTokensByCode
        //instance.getTokensByCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserInfo', function() {
      it('should call getUserInfo successfully', function(done) {
        //uncomment below and update the code to test getUserInfo
        //instance.getUserInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('healthCheck', function() {
      it('should call healthCheck successfully', function(done) {
        //uncomment below and update the code to test healthCheck
        //instance.healthCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('introspectAccessToken', function() {
      it('should call introspectAccessToken successfully', function(done) {
        //uncomment below and update the code to test introspectAccessToken
        //instance.introspectAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('introspectRpt', function() {
      it('should call introspectRpt successfully', function(done) {
        //uncomment below and update the code to test introspectRpt
        //instance.introspectRpt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerSite', function() {
      it('should call registerSite successfully', function(done) {
        //uncomment below and update the code to test registerSite
        //instance.registerSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeSite', function() {
      it('should call removeSite successfully', function(done) {
        //uncomment below and update the code to test removeSite
        //instance.removeSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('umaRpGetClaimsGatheringUrl', function() {
      it('should call umaRpGetClaimsGatheringUrl successfully', function(done) {
        //uncomment below and update the code to test umaRpGetClaimsGatheringUrl
        //instance.umaRpGetClaimsGatheringUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('umaRpGetRpt', function() {
      it('should call umaRpGetRpt successfully', function(done) {
        //uncomment below and update the code to test umaRpGetRpt
        //instance.umaRpGetRpt(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('umaRsCheckAccess', function() {
      it('should call umaRsCheckAccess successfully', function(done) {
        //uncomment below and update the code to test umaRsCheckAccess
        //instance.umaRsCheckAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('umaRsProtect', function() {
      it('should call umaRsProtect successfully', function(done) {
        //uncomment below and update the code to test umaRsProtect
        //instance.umaRsProtect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSite', function() {
      it('should call updateSite successfully', function(done) {
        //uncomment below and update the code to test updateSite
        //instance.updateSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
