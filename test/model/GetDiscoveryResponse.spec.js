/**
 * oxd-server
 * oxd-server
 *
 * OpenAPI spec version: 4.0
 * Contact: yuriyz@gluu.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OxdServer);
  }
}(this, function(expect, OxdServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OxdServer.GetDiscoveryResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetDiscoveryResponse', function() {
    it('should create an instance of GetDiscoveryResponse', function() {
      // uncomment below and update the code to test GetDiscoveryResponse
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be.a(OxdServer.GetDiscoveryResponse);
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property authorizationEndpoint (base name: "authorization_endpoint")', function() {
      // uncomment below and update the code to test the property authorizationEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpoint (base name: "token_endpoint")', function() {
      // uncomment below and update the code to test the property tokenEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property tokenRevocationEndpoint (base name: "token_revocation_endpoint")', function() {
      // uncomment below and update the code to test the property tokenRevocationEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property userInfoEndpoint (base name: "user_info_endpoint")', function() {
      // uncomment below and update the code to test the property userInfoEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientInfoEndpoint (base name: "client_info_endpoint")', function() {
      // uncomment below and update the code to test the property clientInfoEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property checkSessionIframe (base name: "check_session_iframe")', function() {
      // uncomment below and update the code to test the property checkSessionIframe
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property endSessionEndpoint (base name: "end_session_endpoint")', function() {
      // uncomment below and update the code to test the property endSessionEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property jwksUri (base name: "jwks_uri")', function() {
      // uncomment below and update the code to test the property jwksUri
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property registrationEndpoint (base name: "registration_endpoint")', function() {
      // uncomment below and update the code to test the property registrationEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property idGenerationEndpoint (base name: "id_generation_endpoint")', function() {
      // uncomment below and update the code to test the property idGenerationEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property introspectionEndpoint (base name: "introspection_endpoint")', function() {
      // uncomment below and update the code to test the property introspectionEndpoint
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property scopesSupported (base name: "scopes_supported")', function() {
      // uncomment below and update the code to test the property scopesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property responseTypesSupported (base name: "response_types_supported")', function() {
      // uncomment below and update the code to test the property responseTypesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property grantTypesSupported (base name: "grant_types_supported")', function() {
      // uncomment below and update the code to test the property grantTypesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property acrValuesSupported (base name: "acr_values_supported")', function() {
      // uncomment below and update the code to test the property acrValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property subjectTypesSupported (base name: "subject_types_supported")', function() {
      // uncomment below and update the code to test the property subjectTypesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property userInfoSigningAlgValuesSupported (base name: "user_info_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property userInfoSigningAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property userInfoEncryptionAlgValuesSupported (base name: "user_info_encryption_alg_values_supported")', function() {
      // uncomment below and update the code to test the property userInfoEncryptionAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property userInfoEncryptionEncValuesSupported (base name: "user_info_encryption_enc_values_supported")', function() {
      // uncomment below and update the code to test the property userInfoEncryptionEncValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property idTokenSigningAlgValuesSupported (base name: "id_token_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenSigningAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property idTokenEncryptionAlgValuesSupported (base name: "id_token_encryption_alg_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenEncryptionAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property idTokenEncryptionEncValuesSupported (base name: "id_token_encryption_enc_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenEncryptionEncValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestObjectSigningAlgValuesSupported (base name: "request_object_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property requestObjectSigningAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestObjectEncryptionAlgValuesSupported (base name: "request_object_encryption_alg_values_supported")', function() {
      // uncomment below and update the code to test the property requestObjectEncryptionAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestObjectEncryptionEncValuesSupported (base name: "request_object_encryption_enc_values_supported")', function() {
      // uncomment below and update the code to test the property requestObjectEncryptionEncValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpointAuthMethodsSupported (base name: "token_endpoint_auth_methods_supported")', function() {
      // uncomment below and update the code to test the property tokenEndpointAuthMethodsSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpointAuthSigningAlgValuesSupported (base name: "token_endpoint_auth_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property tokenEndpointAuthSigningAlgValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property displayValuesSupported (base name: "display_values_supported")', function() {
      // uncomment below and update the code to test the property displayValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property claimTypesSupported (base name: "claim_types_supported")', function() {
      // uncomment below and update the code to test the property claimTypesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property claimsSupported (base name: "claims_supported")', function() {
      // uncomment below and update the code to test the property claimsSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property idTokenTokenBindingCnfValuesSupported (base name: "id_token_token_binding_cnf_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenTokenBindingCnfValuesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property serviceDocumentation (base name: "service_documentation")', function() {
      // uncomment below and update the code to test the property serviceDocumentation
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property claimsLocalesSupported (base name: "claims_locales_supported")', function() {
      // uncomment below and update the code to test the property claimsLocalesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property uiLocalesSupported (base name: "ui_locales_supported")', function() {
      // uncomment below and update the code to test the property uiLocalesSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property claimsParameterSupported (base name: "claims_parameter_supported")', function() {
      // uncomment below and update the code to test the property claimsParameterSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestParameterSupported (base name: "request_parameter_supported")', function() {
      // uncomment below and update the code to test the property requestParameterSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requestUriParameterSupported (base name: "request_uri_parameter_supported")', function() {
      // uncomment below and update the code to test the property requestUriParameterSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property requireRequestUriRegistration (base name: "require_request_uri_registration")', function() {
      // uncomment below and update the code to test the property requireRequestUriRegistration
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property tlsClientCertificateBoundAccessTokens (base name: "tls_client_certificate_bound_access_tokens")', function() {
      // uncomment below and update the code to test the property tlsClientCertificateBoundAccessTokens
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property frontChannelLogoutSupported (base name: "front_channel_logout_supported")', function() {
      // uncomment below and update the code to test the property frontChannelLogoutSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property frontChannelLogoutSessionSupported (base name: "front_channel_logout_session_supported")', function() {
      // uncomment below and update the code to test the property frontChannelLogoutSessionSupported
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property opPolicyUri (base name: "op_policy_uri")', function() {
      // uncomment below and update the code to test the property opPolicyUri
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property opTosUri (base name: "op_tos_uri")', function() {
      // uncomment below and update the code to test the property opTosUri
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

    it('should have the property scopeToClaimsMapping (base name: "scope_to_claims_mapping")', function() {
      // uncomment below and update the code to test the property scopeToClaimsMapping
      //var instance = new OxdServer.GetDiscoveryResponse();
      //expect(instance).to.be();
    });

  });

}));
