/**
 * oxd-server
 * oxd-server
 *
 * OpenAPI spec version: 4.0
 * Contact: yuriyz@gluu.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OxdServer);
  }
}(this, function(expect, OxdServer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OxdServer.RegisterSiteResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RegisterSiteResponse', function() {
    it('should create an instance of RegisterSiteResponse', function() {
      // uncomment below and update the code to test RegisterSiteResponse
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be.a(OxdServer.RegisterSiteResponse);
    });

    it('should have the property oxdId (base name: "oxd_id")', function() {
      // uncomment below and update the code to test the property oxdId
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property opHost (base name: "op_host")', function() {
      // uncomment below and update the code to test the property opHost
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientName (base name: "client_name")', function() {
      // uncomment below and update the code to test the property clientName
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "client_secret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientRegistrationAccessToken (base name: "client_registration_access_token")', function() {
      // uncomment below and update the code to test the property clientRegistrationAccessToken
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientRegistrationClientUri (base name: "client_registration_client_uri")', function() {
      // uncomment below and update the code to test the property clientRegistrationClientUri
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientIdIssuedAt (base name: "client_id_issued_at")', function() {
      // uncomment below and update the code to test the property clientIdIssuedAt
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

    it('should have the property clientSecretExpiresAt (base name: "client_secret_expires_at")', function() {
      // uncomment below and update the code to test the property clientSecretExpiresAt
      //var instance = new OxdServer.RegisterSiteResponse();
      //expect(instance).to.be();
    });

  });

}));
